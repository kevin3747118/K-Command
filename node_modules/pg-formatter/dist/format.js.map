{"version":3,"sources":["../src/format.js"],"names":["executablePath","__dirname","createConfiguration","userConfiguration","anonymize","functionCase","keywordCase","spaces","stripComments","functionCaseOptionValueMap","capitalize","lowercase","unchanged","uppercase","keywordCaseOptionValueMap","createCommandLineArgs","configuration","args","push","placeholder","join","sql","result","encoding","input"],"mappings":";;;;;;kQAAA;;AAEA;;AAGA;;AAGA;;AAIA,IAAMA,iBAAiB,mBAAQC,SAAR,EAAmB,wBAAnB,CAAvB;;;;;;;;;;;;;;;;;;;;AAoBA,IAAMC,sBAAsB,SAAtBA,mBAAsB,2BAAsE;AAAA,MAArEC,iBAAqE,mGAA1B,EAA0B;;AAChG;AACEC,eAAW,KADb;AAEEC,kBAAc,WAFhB;AAGEC,iBAAa,WAHf;AAIEC,YAAQ,CAJV;AAKEC,mBAAe;AALjB,KAMKL,iBANL;AAQD,CATD;;AAWA,IAAMM,6BAA6B;AACjCC,cAAY,CADqB;AAEjCC,aAAW,CAFsB;AAGjCC,aAAW,CAHsB;AAIjCC,aAAW;AAJsB,CAAnC;;AAOA,IAAMC,4BAA4BL,0BAAlC;;AAEA,IAAMM,wBAAwB,SAAxBA,qBAAwB,CAACC,aAAD,uCAA8C;AAC1E,MAAMC,OAAO,EAAb;;AAEA,MAAID,cAAcZ,SAAlB,EAA6B;AAC3Ba,SAAKC,IAAL,CAAU,aAAV;AACD;;AAED,MAAIF,cAAcX,YAAlB,EAAgC;AAC9BY,SAAKC,IAAL,CAAU,qBAAqBT,2BAA2BO,cAAcX,YAAzC,CAA/B;AACD;;AAED,MAAIW,cAAcV,WAAlB,EAA+B;AAC7BW,SAAKC,IAAL,CAAU,oBAAoBJ,0BAA0BE,cAAcV,WAAxC,CAA9B;AACD;;AAED,MAAIU,cAAcG,WAAlB,EAA+B;AAC7BF,SAAKC,IAAL,CAAU,mBAAmB,uBAAM,CAACF,cAAcG,WAAf,CAAN,CAA7B;AACD;;AAED,MAAIH,cAAcT,MAAlB,EAA0B;AACxBU,SAAKC,IAAL,CAAU,cAAcF,cAAcT,MAAtC;AACD;;AAED,MAAIS,cAAcR,aAAlB,EAAiC;AAC/BS,SAAKC,IAAL,CAAU,aAAV;AACD;;AAED,SAAOD,KAAKG,IAAL,CAAU,GAAV,CAAP;AACD,CA5BD;;kBA8Be,UAACC,GAAD,eAAclB,iBAAd,kCAA4D;AACzE,MAAMa,gBAAgBd,oBAAoBC,iBAApB,CAAtB;AACA,MAAMc,OAAOF,sBAAsBC,aAAtB,CAAb;;AAEA,MAAMM,SAAS,6BAAS,UAAUtB,cAAV,GAA2B,GAA3B,GAAiCiB,IAA1C,EAAgD;AAC7DM,cAAU,MADmD;AAE7DC,WAAOH;AAFsD,GAAhD,CAAf;;AAKA,SAAOC,MAAP;AACD,C","file":"format.js","sourcesContent":["// @flow\n\nimport {\n  execSync\n} from 'child_process';\nimport {\n  resolve\n} from 'path';\nimport {\n  quote\n} from 'shell-quote';\n\nconst executablePath = resolve(__dirname, 'pg-formatter/pg_format');\n\ntype UserConfigurationType = {\n  +anonymize?: boolean,\n  +functionCase?: 'unchanged' | 'lowercase' | 'uppercase' | 'capitalize',\n  +keywordCase?: 'unchanged' | 'lowercase' | 'uppercase' | 'capitalize',\n  +placeholder?: string,\n  +spaces?: number,\n  +stripComments?: boolean\n};\n\ntype ConfigurationType = {\n  +anonymize: boolean,\n  +functionCase: 'unchanged' | 'lowercase' | 'uppercase' | 'capitalize',\n  +keywordCase: 'unchanged' | 'lowercase' | 'uppercase' | 'capitalize',\n  +placeholder?: string,\n  +spaces: number,\n  +stripComments: boolean\n};\n\nconst createConfiguration = (userConfiguration: UserConfigurationType = {}): ConfigurationType => {\n  return {\n    anonymize: false,\n    functionCase: 'unchanged',\n    keywordCase: 'unchanged',\n    spaces: 4,\n    stripComments: false,\n    ...userConfiguration\n  };\n};\n\nconst functionCaseOptionValueMap = {\n  capitalize: 3,\n  lowercase: 1,\n  unchanged: 0,\n  uppercase: 2\n};\n\nconst keywordCaseOptionValueMap = functionCaseOptionValueMap;\n\nconst createCommandLineArgs = (configuration: ConfigurationType): string => {\n  const args = [];\n\n  if (configuration.anonymize) {\n    args.push('--anonymize');\n  }\n\n  if (configuration.functionCase) {\n    args.push('--function-case ' + functionCaseOptionValueMap[configuration.functionCase]);\n  }\n\n  if (configuration.keywordCase) {\n    args.push('--keyword-case ' + keywordCaseOptionValueMap[configuration.keywordCase]);\n  }\n\n  if (configuration.placeholder) {\n    args.push('--placeholder ' + quote([configuration.placeholder]));\n  }\n\n  if (configuration.spaces) {\n    args.push('--spaces ' + configuration.spaces);\n  }\n\n  if (configuration.stripComments) {\n    args.push('--nocomment');\n  }\n\n  return args.join(' ');\n};\n\nexport default (sql: string, userConfiguration?: UserConfigurationType) => {\n  const configuration = createConfiguration(userConfiguration);\n  const args = createCommandLineArgs(configuration);\n\n  const result = execSync('perl ' + executablePath + ' ' + args, {\n    encoding: 'utf8',\n    input: sql\n  });\n\n  return result;\n};\n"]}