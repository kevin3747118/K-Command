May 07 2017 - v2.0

This major release adds a plpgsql code beautifier. This makes pgFormatter
the best free tool to rewrite and beautify any SQL and PLPGSQL code. This
release also fixes several issues and adds lot of improvements in code
formatting.

    - Add PLPGSQL beautifier.
    - Fix case sensitivity of plpgsql keywords when using the -u command line
      option. Thanks to Hubert Depesz Lubaczewski for the report.
    - Add regression tests script regress_test.pl, more test files and expected
      results.
    - Do not append newline before a concatenation operator.
    - Fix unitialized variable issue and remove newline in insert statement
      after a close parenthesis.
    - Remove comment before HTML beautifier and restore them after to prevent
      beautifying keywords in comments.
    - Improve formatting of UPDATE and DELETE statement.
    - Improve all DDL statements formatting.
    - Only format functions when name is followed by an open parenthesis.
    - Add support for AWS Redshift keywords. Thanks to cavanaug for the feature
      request.
    - Prevent new line after a comma in parameters function.
    - Add LATERAL keyword.
    - Remove new line between UNION and ALL.
    - Add RETURNING as far left keyword.
    - Fix some potential case sensitivity issues.
    - Replace tabulation with space for better indentation.
    - Prevent newline in USING clause of JOIN.
    - Prevent newline after a closing parenthesis but before an operator.
    - Prevent new line when a comma is followed by a quote

January 23 2017 - v2.0

This release fixes several issues and adds lot of improvements in
query formatting.

Command line option --placeholder or -p has been added to be able
to set regex to find code that must not be formatted. For example,
in query like:

	SELECT * FROM projects WHERE projectnumber
		IN <<internalprojects>> AND username = <<loginname>>;

you may want pgFormatter to not interpret << and >> as bit-shift
keywords and modify your code snippsets. You can use a Perl regular
expression to instruct pgFormatter to keep some part of the query
untouched. For example:

        pg_format samples/ex9.sql -p '<<(?:.*)?>>'

will not format the bit-shift like operators.

Here is the complete list of changes:

  - Improve SQL formatting by reducing space with parenthesis and
    cast with ::.
  - Add two sample file to test placeholder feature and WITH query.
  - Fix missing newline after INNER JOIN. Thanks to Julien Rouhaud
    for the report.
  - Fix whitespace placed in between the E and the quote character.
    Thanks to clijunky for the report.
  - Fix lots of operators reported on issue #22. Thanks to Laurenz
    Albe for the report and list of missing operators.
  - Fix version number in lib/pgFormatter library files.
  - Add -p | --placeholder command line option to prevent pgFormatter
    to replace some part of the SQL queries. Thanks to jhelberg for
    the feature request.
  - Fix bad formatting with anonymized values in queries. Thanks to
    Pilat66 for the report.

October 17 2015 - v1.5

This release fixes several issues and adds support to new keywords added in
PostgreSQL 9.5. There's also a major code rewrite by Hubert depesz Lubaczewski,
pg_format works as previously - handles both CGI and CLI interface, but you
can get directly to whatever functionality you want by using pgFormatter::*
modules.

New beautified keywords are: BERNOULLI, CUBE, GROUPING SETS, SKIP LOCKED,
LOGGED, POLICY, ROLLUP, TABLESAMPLE. And new functions are: jsonb_pretty,
jsonb_set, pg_last_committed_xact, pg_xact_commit_timestamp.

There is also a useful hint added to documentation to be able to format
you SQL code from vi by adding a simple line to .vimrc. This hint is taken
from David Fetter's blog : http://people.planetpostgresql.org/dfetter/index.php?/archives/78-Formatting!.html
 
Here is the complete list of other changes:
 
  - Add useful hint about formating in vi. Thanks to David Fetter for the hint.
  - Prevent newline after open parenthesis and indent back after close when we have count(*) for example.
  - Add test query with a backslash before a quote in samples/ex8.sql.
  - Fix coloring string when the string contained a backslash before a quote. Thanks to Kevin Brannen for the patch.
  - Add RETURNS keywords.
  - Remove newline before the FOR keywords.
  - Add BY to the list of PG keywords to be capitalized.
  - Add new keywords from PostgreSQL 9.5.
  - Reformat queries with FOR and USING, for example: CREATE POLICY policy_even_ids_only ON log FOR ALL TO PUBLIC USING (id % 2 = 0);
  - Fix unescaped character in regex. Thanks to Tom Burnett for the patch.
  - Fix wrong indentation with function that accept FROM clause. Thanks to Adrian Klaver and Alvaro Herrera for the report.
  - Add more test samples about json operators.
  - Add JSON #>> operator and sample. Thanks to Tom Burnett for the patch.
  - Some more JSON operators. Thanks to Hubert depesz Lubaczewski for the patch.
  - JSON operators have to be before normal operators as regexp will match first possible string, so -> will match - first, if it's before in tokenizer. Changing order solves the problem reports by Tom Burnett. Thanks to Hubert depesz Lubaczewski for the patch.
  - Add new json/jsonb functions to list of pg functions.
  - Add JSON operators. Thanks to Tom Burnett for the report.
  - Fix anonymizing failure reported in issue #15. Thanks to Niklas Schmidtmer for the report.
  - Add developer documentation. Thanks to Hubert depesz Lubaczewski for the patch.
  - Fix Beautify.pm with perl 5.20. Thanks to Hubert depesz Lubaczewski for the patch.
  - In Beautify.pm we were not considering the possibility of $last being empty in one condition inside a JOIN, and that gives an exception in perl 5.20. Thanks to Pablo Alvarez de Sotomayor Posadillo for the patch.
  - Split into libraries and programs complete. Thanks to Hubert depesz Lubaczewski for the patch.


April 18 2015 - v1.4

This release fixes several issues and adds a useful anonymization option to
be able to obfuscate all values in SQL queries, see option -a | --anonymize
at command line or the corresponding checkbox in the CGI interface.

  - Fix wrong reset position when a FROM clause is encountered in a subselect.
    Thanks to Alvaro Herrera for the report.
  - Add information on indentation to obtain a single line statement in CGI
    interface.
  - Remove unecessary first line in text mode and stdout output. Thanks to
    David Fetter for the report.
  - Automatically set default page for Reset all redirection. Thanks to
    rimbault for the report.
  - Add -a | --anonymize to obfuscate all values in SQL queries.
  - Add checkbox to activation anonymize feature from CGI interface.
  - Ran perlcritic on the code, and fixed most critical issues. Thanks to
    Hubert depesz Lubaczewski for the patch.
  - Make anonymization more useful. Thanks to Hubert depesz Lubaczewski for
    the patch.
  - Removed anonymisation of interval value (eg: 1 day) and to_char date format
    (eg: DD/MM/YYYY HH24:MI:SS. Add a sample into ex4.sql file.
  - Add REPLACE to the list of SQL keywords. Thanks to Alvaro Herrera for the
    report.
  - Prevent new line to be inserted before OR after a CREATE keyword to have
    CREATE OR REPLACE on a single line.
  - Fix additional spaces added in function body separator ($BODY$ was
    rewritten as $ BODY $). Thanks to Alvaro Herrera for the report.
  - Prevent (....)::interval to be replaced by the anonymizer.
  - Add sample file with create function for testing purpose.


Mars 19 2015 - v1.3

This release fixes several issues and adds geometric operators. It is also
possible now to format an sql script with one statement per line, which is
the reverse of the standard used.

  - Update Copyright year.
  - Add geometric operators. Thanks to Devin Ben-Hur for the report.
  - With one statement per line format, keep comment on separate line.
    Thanks to Marco Schmidt for the patch.
  - Allow pgFormatter to format an sql script with one statement per
    line (no line-break, no indent, no comments) when -s | --space is
    set to 0. Thanks to Marco Schmidt for the patch.
  - Restrict regex matching in the ASCII range only with "use re /aa;".
    Regex that has a look-ahead or look-behind AND uses the "i" modifier
    need the "aa" modifiers too. This is for perl>=5.14. For perl<5.14
    you will just have a warning about non existant re pragma. Thanks
    to Kevin Brannen for the patch.
  - Fix bug where capitalize makes functions disappear. Thanks to Vincent
    Picavet for the report.
  - Fix usage where obsolete -c option was still used.
  - Add new sample file.
  - Fix left joins that came out too far to the left and remove newline
    after OUTER. Thanks to Kevin Brannen for the report.
  - Applied typo patch of Felix Hummel to the POD documentation.
  - Fix some typo on documentation. Thanks to Felix Hummel for the patch.
  - Fix issue in formatting double quotes included into single quotes.
    Thanks to Julien Rouhaud for the report.
  - Fix issue with Perl 5.16 that do not allow "ss" inside look-behind
    assertions. Thanks to Cedric for the report.

January 11 2013 - v1.2

This release add file upload capability in CGI context and better code
formatting.

  - Add HTML break before the footer in CGI context.
  - Add missing SQL::Beautify paternity and update license part
    of the documentation.
  - Allow file upload in CGI context.
  - Fix issue in formatting that prevent left back indentation
    when major keywords were found. Thanks to Kevin Brannen for
    the patch.
  - Add information in code comments about external files in
    CGI mode.
  - Force the parser to not insert a new line after the SET
    keyword when the query begin with it. This is to preserve the
    single line with queries like SET client_encoding TO "utf8";
  - Add new line after SET keyword to better format UPDATE queries.
    Thanks to Pilat66 for the report.

December 27 2012 - v1.1

  - Preserve SQL code formatting when copy/paste.
  - Removed coypright from CGI footer
  - Modify links at the bottom of the CGI interface.
  - Fix obsolete option in usage example.
  - Limit SQL query size to $maxlength in CGI context and non interactive usage.

December 22 2012 - v1.0

  This is the initial release of pgFormatter

