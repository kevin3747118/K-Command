'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _debug = require('debug');

var _debug2 = _interopRequireDefault(_debug);

var _isSqlQuery = require('../utilities/isSqlQuery');

var _isSqlQuery2 = _interopRequireDefault(_isSqlQuery);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = (0, _debug2.default)('eslint-plugin-sql:rule:no-unsafe-query');

exports.default = function (context) {
  var placeholderRule = context.settings.sql && context.settings.sql.placeholderRule;

  var allowLiteral = context.options && context.options[0] && context.options[0].allowLiteral;

  return {
    TemplateLiteral(node) {
      if (allowLiteral && node.quasis.length === 1) {
        return;
      }

      var literal = node.quasis.map(function (quasi) {
        return quasi.value.raw;
      }).join('foo');

      debug('input', literal);

      var recognizedAsQuery = (0, _isSqlQuery2.default)(literal, placeholderRule);

      debug('recognized as a query', recognizedAsQuery);

      if (!recognizedAsQuery) {
        return;
      }

      if (!node.parent.tag || node.parent.tag.name !== 'sql') {
        context.report({
          message: 'Use "sql" tag',
          node
        });
      }
    }
  };
};

module.exports = exports['default'];